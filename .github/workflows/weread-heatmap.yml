name: Generate Heatmap
on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 时间 00:00 运行
  workflow_dispatch:  # 允许手动触发
jobs:
  generate:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 添加此权限以允许提交和推送
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install jq
        run: sudo apt-get install jq
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests svgwrite
      - name: Fetch and parse Weread login info
        run: |
          # 使用 secrets.GIST_URL 获取JSON文件内容
          WEREAD_JSON=$(curl -s "${{ secrets.GIST_URL }}")
          
          # 检查是否成功获取内容
          if [ -z "$WEREAD_JSON" ]; then
            echo "Failed to fetch Weread login info"
            exit 1
          fi
          
          # 安装jq以解析JSON（如果需要）
          sudo apt-get update && sudo apt-get install -y jq
          
          # 解析JSON并设置为环境变量
          echo "USER_VID=$(echo $WEREAD_JSON | jq -r '.vid')" >> $GITHUB_ENV
          echo "REQUEST_BODY=$(echo $WEREAD_JSON | jq -r '.requestBody')" >> $GITHUB_ENV
          echo "REQUEST_HEADERS=$(echo $WEREAD_JSON | jq -r '.headers')" >> $GITHUB_ENV
          
          echo "Successfully parsed Weread login info"

      - name: Generate heatmap
        env:
          USER_VID: ${{ env.USER_VID }}
          REQUEST_BODY: ${{ env.REQUEST_BODY != '' }}
          REQUEST_HEADERS: ${{ env.REQUEST_HEADERS != '' }}
          START_YEAR: ${{ vars.START_YEAR }}
          END_YEAR: ${{ vars.END_YEAR }}
          NAME: ${{ vars.NAME }}
          TRACK_COLOR: ${{ vars.TRACK_COLOR }}
          TRACK_SPECIAL1_COLOR: ${{ vars.TRACK_SPECIAL1_COLOR }}
          TRACK_SPECIAL2_COLOR: ${{ vars.TRACK_SPECIAL2_COLOR }}
          TRACK_SPECIAL3_COLOR: ${{ vars.TRACK_SPECIAL3_COLOR }}
          TRACK_SPECIAL4_COLOR: ${{ vars.TRACK_SPECIAL4_COLOR }}
          DEFAULT_DOM_COLOR: ${{ vars.DEFAULT_DOM_COLOR }}
          TEXT_COLOR: ${{ vars.TEXT_COLOR }}
          TITLE_COLOR: ${{ vars.TITLE_COLOR }}
          YEAR_TXT_COLOR: ${{ vars.YEAR_TXT_COLOR }}
          MONTH_TXT_COLOR: ${{ vars.MONTH_TXT_COLOR }}
        run: python heatmap.py
      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "action@github.com"
          git add heatmap.svg
          git commit -m "Update heatmap [skip ci]" || echo "nothing to commit"
          git push || echo "nothing to push"
